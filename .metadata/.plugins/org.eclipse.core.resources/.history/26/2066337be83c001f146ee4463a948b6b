package com.kh.practice.list.library.controller;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import com.kh.practice.list.library.model.vo.Book;

//비즈니스 로직 조정, 데이터 흐름관리, 인터페이스와 상호작용하는 역할
// 제어(controller)용 클래스 --> 사용자의 요청에 따라 작업을 제어 수행한 후 결과를 전달하는 역할
public class BookController {

	// ArrayList 인스턴스 생성 후 List 자료형으로 변수 bookList에 저장
	// 오브젝트 객체의 자식이기 떄문에 제네릭 생략가능
	private List<Book> bookList = new ArrayList<>();

	// bookList 초기 값 저장
	public BookController() {
		bookList.add(new Book("자바의 정석", "남궁 성", "기타", 20000));
		bookList.add(new Book("쉽게 배우는 알고리즘", "문병로", "기타", 15000));
		bookList.add(new Book("대화의 기술", "강보람", "인문", 17500));
		bookList.add(new Book("암 정복기", "박신우", "의료", 21000));
	}

	// Book 매개변수를 그 값을 받으면 bookList에 저장
	public void insertBook(Book bk) {
		// 전달받은 Book 객체(bk)를 리스트에 추가 : add
		// bk라는 이름의 Book 객체를 BookList에 추가한다는 의미
		bookList.add(bk);

	}

	// 저장된 bookList를 반환하는 메소드. 현재 bookList의 자료형은 List객체이기 때문에 형변환 필수
	public ArrayList<Book> selectList() {
		// 해당 리스트의 주소값 반환 --> 현재 컨트롤러에서 사용중인 리스트의 참조변수를 반환
		return (ArrayList<Book>) bookList;
	}

	// 사용자에게 입력받은 글자를 포함한 책 제목을 찾아 반환하는 메소드
	public ArrayList<Book> searchBook(String keyword) {

		// 일치하는 값을 저장 하기 위한 searchBook / 인스턴스 생성
		ArrayList<Book> searchList = new ArrayList<>();

		// keyword값을 받으면 bookList에 존재하는 각각의 인덱스에 title과 비교하여
		// 일치하는 글자가 있을 시 그 내용을 searchList에 저장.
		for (int i = 0; i < bookList.size(); i++) {
			// 제네릭 선언 안했을 시에는
			// 현재 bookList는 Object 자료형이므로 Object에 없는 get() 메소드를 사용할 수 없기 때문에 형변환 필수
			Book b = bookList.get(i);
			String title = b.getTitle();

			if (title.contains(keyword)) {
				searchList.add(b);

			}
			// 반환 값으로 seachList 반환
		}
		return searchList;

	}

	// title과 author를 사용자로부터 받고 일치하는 책 삭제하는 매소드
	public Book deleteBook(String title, String author) {

		// Book 인스턴스 생성
		Book removeBook = new Book();
		// 안에 있는 값을 null로 초기화
		removeBook = null;

		// bookList 길이만큼 각각의 인덱스에 있는 title과 author 값을 비교하여 그 결과를 currentBook에 저장
		for (int i = 0; i < bookList.size(); i++) {
			Book b = bookList.get(i);
			String title1 = b.getTitle();
			String author1 = b.getAuthor();
			if (title1.equals(title) && author1.equals(author)) {

				removeBook = bookList.remove(i);
				// 값이 일치하는 인덱스 값 삭제

				break;

			}
			// 일치하는 값의 인덱스를 주소를 저장한 removeBook 반환
		}
		return removeBook;

	}

	public int ascBook() {
		// 책 이름으로 오름차순 후 1 반환
		// ArrayList에 담긴 객체인 Book 클래스에 compareTo 메소드 재정의하여 정렬
		Collections.sort(bookList);
		
		return 1;
	}

}
