package com.kh.practice.map;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;

public class MapPractice {

	/*
	 * Map<K, V> 특징
	 * : key-value 형식으로 데이터를 저장(관리)
	 * 	 + key에 해당하는 데이터 : 중복 허용하지 않음(Set 방식)
	 * 	 + value에 해당하는 데이터 : key값이 중복되지 않은 경우 중복허용 (List 방식)
	 * 
	 *  Map의 메소드
	 *  [1] 데이터 추가 : put(키에 해당하는 값, 벨류에 해당하는 값)
	 *  [2] 데이터 삭제 : remove(키에 해당하는 값)
	 *  [3] 데이터 조회 : get(키에 해당하는 값)
	 *  [4] 키 목록 조회 : keySet()
	 *  [5] 데이터 길이 조회 : size()
	 */
	
	public static void main(String[] arg) {
		
		hashMapTest();
		
	}
	
	public static void hashMapTest() {
		// HashMap 객체 선언 및 생성
		// key - 정수형 데이터, Value - 문자열 데이터
		Map<Integer, String> hashmap = new HashMap<>();
		
		// Map 구조에 데이터를 저장(추가) : put(key, value);
		hashmap.put(1000, "프리티인창");
		hashmap.put(1001, "종군당");
		hashmap.put(1002, "피하 기다운 로드");
		
		// 키 목록 조회 : keySet()
		Set<Integer> keyList = hashmap.keySet();
		System.out.println("------------------------------------");
		// 키 데이터 출력
		for(Integer key : keyList) {
			System.out.println(key);
		}
		System.out.println("------------------------------------");
		// 데이터 조회
		for(Integer key : keyList) {
			
			System.out.println(hashmap.get(key));
			
		}
		System.out.println("------------------------------------");
		// "피하 기다운 로드" 데이터 제거
		hashmap.remove(1002);
		
		// Iterator 객체 사용하여 조회
		Iterator<Integer> it = keyList.iterator();
		while(it.hasNext()) {
			int key = it.next();
			System.out.println(it.next() + ":" + hashmap.get(key));
		}
	}
	
}
